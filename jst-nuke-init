#!/usr/bin/env node

var program = require('commander')

program
  .option('-c', '--create-repo', 'Creates the repo on GitHub')
  .parse(process.argv)

var {execSync} = require('child_process')
var inquirer = require('inquirer')
var clone = require('gitclone')
var rimraf = require('rimraf')
var replaceInFile = require('replace-in-file')
var cd = process.chdir

var questions = [
  {
    name: 'humanName',
    message: 'Name of JSTransformer (capitalized properly)'
  },
  {
    name: 'url',
    message: 'URL to find more about the transformer'
  }
]


if (program.createRepo) {
  var GitHubAPI = require('github')
  var github = new GitHubAPI()
  questions = questions.concat([
    {
      name: 'username',
      message: 'GitHub Username (for creating repo)'
    },
    {
      name: 'password',
      type: 'password',
      message: 'GitHub Password (for creating repo)'
    }
  ])
}

var replace = function (replace, withWhat) {
  replaceInFile.sync({
    files: ['package.json', 'README.md', 'index.js'],
    replace: replace,
    with: withWhat
  })
}

var errHandler = function (err) {
  if (err) { console.error(err.stack) }
}

var print = function (data) {
  console.log(data.stdout)
  console.error(data.stderr)
}

var run = function (command) {
  console.log(execSync(command).toString())
}

var getInfo = function () {
  return inquirer.prompt(questions).then(function (answers) {
    if (program.createRepo) {
      github.authenticate({
        type: "basic",
        username: answers.username,
        password: answers.password
      }).then(() => { console.log('authenticated with GitHub') } )
    }
    answers.lowerName = answers.humanName.toLowerCase().replace(' ', '')
    answers.transformer = `jstransformer-${answers.lowerName}`
    return answers
  })
}

var setup = function (answers) {
  clone('jstransformers/boilerplate', {dest: answers.transformer}, function () {
    cd(answers.transformer)
    run('pwd')
    rimraf.sync('.git')
    if (program.createRepo) {
      github.repos.createForOrg({
        org: 'jstransformers',
        name: answers.transformer,
        description: `${answers.humanName} support for JSTransformers`,
        homepage: `https://npmjs.com/${answers.transformer}`,
        has_wiki: false
      }).then(() => {
        console.log('Finished making repo on GitHub')
        console.log(`Go to https://travis-ci.org/jstransformers/${answers.transformer} and click enable`)
      })
    }

    run('git init')
    run('yarn')
    // removes lines until "# jstransformer-foo"
    replace(/[\w\W]+?(?=# jstransformer-foo)/, '')
    replace(/http:\/\/example.com/g, answers.url)
    replace(/foo/g, answers.lowerName)
    replace(/Foo/g, answers.humanName)
    console.log('done!')
  })
}

getInfo().then(function (answers) {
  setup(answers)
})
